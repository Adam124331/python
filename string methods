thing = "hello everyone , you've come to the right place, Enjoy the syntax"

print(thing.count("e"))

---------------------------------------------------------------------------------

thing = "hello everyone , you've come to the right please , Enjoy the syntax"

print(thing.index("e"))


OUTPUT:
1

---------------------------------------------------------------------------------
thing = "hello everyone , you've come to the right please , Enjoy the syntax"

print(thing.index("e237892"))


OUTPUT:          throws an error if it cant find the str  and this error wont be displayed in find method , instead it willreturn -1

Traceback (most recent call last):
  File "/home/main.py", line 11, in <module>
    print(thing.index("e237892"))
ValueError: substring not found

---------------------------------------------------------------------------------
thing = "hello everyone , you've come to the right please , Enjoy the syntax"

print(thing.find("e237892"))

output:
-1
---------------------------------------------------------------------------------
thing = "hello everyone , you've come to the right please , Enjoy the syntax"

print(thing.rindex("e"))

output:
59
---------------------------------------------------------------------------------
thing = "hello everyone , you've come to the right please , Enjoy the syntax"

print(thing.rfind("e"))

output:
59

---------------------------------------------------------------------------------

PASS
+++++++++++++++++++++


def hello():

output:    # error
File "/home/main.py", line 12
    
IndentationError: expected an indented block after function definition on line 11

_________________________________________________________________________________

def hello():
    pass
    
output:    # no error


________________________________________________________________________________

break
+++++++++++++++++++++++

for i in range(100):
    print(i)
    if(i == 10):
        break
        
 output:
 1
 2
 3
 4
 5
 6
 7
 8
 9
 10
 
 ________________________________________________________________________________
 
 continue                   # skips one particular execution
 ++++++++++
 for i in range(10):
  
    if(i == 5):
        continue
    print(i)
    
    
   output:
   0
   1
   2
   3
   4
   6
   7
   8
   9
   

