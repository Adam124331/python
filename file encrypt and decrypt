import numpy as np

def add_matrices(matrix1, matrix2):
    return np.add(matrix1, matrix2)

def multiply_matrices(matrix1, matrix2):
    return np.dot(matrix1, matrix2)

def transpose_matrix(matrix):
    return np.transpose(matrix)

# Example usage
matrix1 = np.array([[1, 2], [3, 4]])
matrix2 = np.array([[5, 6], [7, 8]])

print("Matrix 1:")
print(matrix1)

print("Matrix 2:")
print(matrix2)

result_addition = add_matrices(matrix1, matrix2)
print("Addition Result:")
print(result_addition)

result_multiplication = multiply_matrices(matrix1, matrix2)
print("Multiplication Result:")
print(result_multiplication)

result_transpose = transpose_matrix(matrix1)
print("Transpose of Matrix 1:")
print(result_transpose)

-----------------------------------------------------------------------------------------------------------------------


def encrypt_file(input_file, output_file, key):
    with open(input_file, 'r') as file:
        data = file.read()
    
    encrypted_data = ""
    for char in data:
        encrypted_char = chr(ord(char) + key)
        encrypted_data += encrypted_char

    with open(output_file, 'w') as file:
        file.write(encrypted_data)

def decrypt_file(input_file, output_file, key):
    with open(input_file, 'r') as file:
        encrypted_data = file.read()

    decrypted_data = ""
    for char in encrypted_data:
        decrypted_char = chr(ord(char) - key)
        decrypted_data += decrypted_char

    with open(output_file, 'w') as file:
        file.write(decrypted_data)

# Example usage
input_file = "input.txt"
output_file = "output.txt"
encryption_key = 3

# Encrypt the file
encrypt_file(input_file, "encrypted.txt", encryption_key)

# Decrypt the file
decrypt_file("encrypted.txt", output_file, encryption_key)
